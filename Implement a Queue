class Queue {
public:
    int *arr;
    int qfront;
    int rear;
    int size;
    Queue() {
        // Implement the Constructor
        size=1000001;
        arr=new int[size];
        qfront=0;
        rear=0;
    }

    /*----------------- Public Functions of Queue -----------------*/

    bool isEmpty() {
        // Implement the isEmpty() function
        if(qfront==rear)
            return true;
        return false;
        
    }

    void enqueue(int data) {
        // Implement the enqueue() function
           if(rear == size){

           cout << "queue is full";

       }

       else{

           arr[rear] = data;

           rear++;

       }
    }

    int dequeue() {
        // Implement the dequeue() function
          int ans = arr[qfront];

       if(qfront == rear){

           return -1;

       }

       

       else{

           arr[qfront] = -1;

           qfront++;

            return ans;

       }
    }

    int front() {
        // Implement the front() function
            if(qfront == rear){

           return -1;

       }

       else{

           return arr[qfront];

       }
    }
};
