/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
#include<bits/stdc++.h>
unordered_map<int,int>mp;
TreeNode<int>*helper(vector<int>&preorder,vector<int>&inorder,int&start,int s,int e)
{
    if(e<s)
        return NULL;
    
    TreeNode<int>*root = new TreeNode<int>(preorder[start]);
    int mid = mp[preorder[start]];
    start++;
    root->left = helper(preorder,inorder,start,s,mid-1);
    root->right = helper(preorder,inorder,start,mid+1,e);
    return root;
}
TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder)
{
	//    Write your code here
    int start = 0,s=0,e=inorder.size()-1;
   for(int i=0;i<=e;i++)
   {
       mp[inorder[i]]=i;
   }
    return helper(preorder,inorder,start,s,e);
}
