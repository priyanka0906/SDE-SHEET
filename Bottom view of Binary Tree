/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    if(root==NULL)
        return {};
   // ans.clear();
//     ans.push_back(root->data);
//     helper(root,0);
    
    queue<pair<BinaryTreeNode<int>*,int>>q;
    
    q.push({root,0});
    map<int,int>mp;
    vector<int>ans;
    while(!q.empty())
    {
        int sz = q.size();
         while(sz--)
        {
            BinaryTreeNode<int>* cur = q.front().first;;
            int  d = q.front().second;
             q.pop();
            mp[d]=cur->data;
            
            if(cur->left)
                q.push({cur->left,d-1});
            if(cur->right)
            {
                q.push({cur->right,d+1});
            }
            
           }
    }
    for(auto i:mp)
    {
        ans.push_back(i.second);
    }
    return ans;
    
}
