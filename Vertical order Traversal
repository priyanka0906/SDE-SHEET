/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/
#include<bits/stdc++.h>
vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    if(root==NULL)
        return{};
    vector<int>ans;
    map<int,vector<int>>mp;
    queue<pair<TreeNode<int>*,int>>q;
    q.push({root,0});
    while(!q.empty())
    {
        int sz  = q.size();
        while(sz--)
        {
            TreeNode<int>*cur = q.front().first;
             int d = q.front().second;
            mp[d].push_back(cur->data);
            q.pop();
            if(cur->left)
                q.push({cur->left,d-1});
            if(cur->right)
            {
                q.push({cur->right,d+1});
            }
        }
    }
    for(auto i:mp)
    {
        for(int j=0;j<i.second.size();j++)
        {
            ans.push_back(i.second[j]);
        }
        
    }
    return ans;
}
