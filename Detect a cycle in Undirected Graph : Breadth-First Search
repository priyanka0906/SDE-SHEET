#include<bits/stdc++.h>
string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
   vector<int>adj[n+1];
    vector<int>visited(n+1,0);
    
    for(int i=0;i<m;i++)
    {
        int u = edges[i][0];
        int v = edges[i][1];
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    
    
    for(int i=1;i<=n;i++){
     if(visited[i]==0){
     queue<pair<int,int>>q;
     q.push({i,-1});
     visited[i]=1;
    while(!q.empty())
    {
        int cur = q.front().first;
        int par = q.front().second;
        q.pop();
        for(int j:adj[cur])
        {
            if(visited[j]==1&&j!=par)
            {
                return "Yes";
            }
            else if(visited[j]==0)
            {
                q.push({j,cur});
                visited[j]=1;
                
            }
        }
    }
           }
    }
    return "No";
    
}
