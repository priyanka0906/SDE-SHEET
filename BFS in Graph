#include<bits/stdc++.h>
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    // Write your code here
    vector<int> adj[vertex];
    for(int i=0;i<edges.size();i++)
    {
        int u = edges[i].first;
        int  v = edges[i].second;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    for(int i=0;i<vertex;i++)
    {
        sort(adj[i].begin(),adj[i].end());
    }
    
    vector<int>ans;
    vector<int>visited(vertex,0);
    for(int i=0;i<vertex;i++)
    {
        queue<int>q;
        if(visited[i]==0)
        {
            q.push(i);
            visited[i]=1;
            while(!q.empty())
            {
                int cur = q.front();
                ans.push_back(cur);
                q.pop();
                for(int j:adj[cur])
                {
                    if(visited[j]==0)
                    {
                        q.push(j);
                        visited[j]=1;
                    }
                }
            }
        }
        
    }
    return ans;
}
