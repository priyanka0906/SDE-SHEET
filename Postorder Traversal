/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/
vector<int>ans;
void postorder(TreeNode*root)
{
    if(root==NULL)
        return;
    postorder(root->left);
    postorder(root->right);
    ans.push_back(root->data);
}
vector<int> getPostOrderTraversal(TreeNode *root)
{
    ans.clear();
    
    //recursive soltuion
    //postorder(root);
    
    //iterative solution
    stack<TreeNode*>s;
    
    TreeNode* curr = root,*prev = NULL;
    while(!s.empty()||curr!=NULL)
    {
        if(curr!=NULL)
        {
            s.push(curr);
            curr=curr->left;
            
        }
        
        else
        {
            curr = s.top();
            if(curr->right==NULL||curr->right==prev)
            {
                ans.push_back(curr->data);
                s.pop();
                prev = curr;
                curr=NULL;
            }
            else
            {
                curr = curr->right;
            }
        }
        
    }
    
         
    
    return ans;
}
